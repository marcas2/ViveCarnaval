{% extends 'base.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js" defer></script>
    <style>
        :root {
            --primary: #4361ee;
            --primary-dark: #3a56d4;
            --secondary: #7209b7;
            --accent: #f72585;
            --light: #f8f9fa;
            --dark: #212529;
            --gray: #6c757d;
            --success: #4cc9f0;
            --card-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
            --hover-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
        }
        
        body {
            font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;
            background-color: #f5f7fb;
            color: var(--dark);
        }
        
        #map { 
            height: 80vh; 
            width: 100%; 
            border-radius: 12px; 
            box-shadow: var(--card-shadow);
            z-index: 1;
        }
        
        [x-cloak] { 
            display: none !important; 
        }
        
        .modal-bg {
            background-color: rgba(0,0,0,0.6);
            position: fixed;
            inset: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
            backdrop-filter: blur(4px);
        }
        
        .header-gradient {
            background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
        }
        
        .event-card {
            background: white;
            border-radius: 10px;
            padding: 1.25rem;
            margin-bottom: 1rem;
            box-shadow: var(--card-shadow);
            transition: all 0.3s ease;
            border-left: 4px solid var(--primary);
            cursor: pointer;
        }
        
        .event-card:hover {
            transform: translateY(-5px);
            box-shadow: var(--hover-shadow);
            border-left-color: var(--accent);
        }
        
        .event-title {
            font-weight: 700;
            font-size: 1.1rem;
            color: var(--primary);
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .event-description {
            color: var(--gray);
            font-size: 0.9rem;
            margin-bottom: 0.75rem;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }
        
        .event-date {
            color: var(--gray);
            font-size: 0.8rem;
            display: flex;
            align-items: center;
            gap: 0.4rem;
        }
        
        .sidebar {
            background: white;
            border-radius: 12px;
            box-shadow: var(--card-shadow);
            overflow: hidden;
        }
        
        .sidebar-header {
            background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
            color: white;
            padding: 1.25rem;
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }
        
        .search-container {
            padding: 1rem;
            border-bottom: 1px solid #e9ecef;
        }
        
        .search-input {
            width: 100%;
            padding: 0.75rem 1rem;
            border-radius: 8px;
            border: 1px solid #e2e8f0;
            font-size: 0.9rem;
            transition: all 0.2s;
        }
        
        .search-input:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.15);
        }
        
        .events-container {
            max-height: calc(80vh - 180px);
            overflow-y: auto;
            padding: 0 1rem 1rem;
        }
        
        .events-container::-webkit-scrollbar {
            width: 6px;
        }
        
        .events-container::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 10px;
        }
        
        .events-container::-webkit-scrollbar-thumb {
            background: var(--primary);
            border-radius: 10px;
        }
        
        .no-events {
            text-align: center;
            padding: 2rem 1rem;
            color: var(--gray);
        }
        
        .no-events i {
            font-size: 2rem;
            margin-bottom: 1rem;
            color: #e2e8f0;
        }
        
        .modal-content {
            background: white;
            border-radius: 12px;
            padding: 2rem;
            width: 90%;
            max-width: 500px;
            box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
            position: relative;
            animation: modal-appear 0.3s ease-out;
        }
        
        @keyframes modal-appear {
            from {
                opacity: 0;
                transform: scale(0.9) translateY(10px);
            }
            to {
                opacity: 1;
                transform: scale(1) translateY(0);
            }
        }
        
        .close-btn {
            position: absolute;
            top: 1rem;
            right: 1rem;
            background: none;
            border: none;
            font-size: 1.5rem;
            color: var(--gray);
            cursor: pointer;
            transition: color 0.2s;
            width: 32px;
            height: 32px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
        }
        
        .close-btn:hover {
            color: var(--dark);
            background-color: #f8f9fa;
        }
        
        .modal-title {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: 1rem;
            padding-right: 2rem;
        }
        
        .modal-description {
            color: var(--dark);
            line-height: 1.6;
            margin-bottom: 1.5rem;
        }
        
        .modal-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 1.5rem;
            padding-top: 1rem;
            border-top: 1px solid #e9ecef;
        }
        
        .modal-date {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: var(--gray);
            font-size: 0.9rem;
        }
        
        .modal-image {
            width: 100%;
            border-radius: 8px;
            margin: 1rem 0;
            max-height: 250px;
            object-fit: cover;
        }
        
        .location-btn {
            background: var(--primary);
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 6px;
            font-size: 0.9rem;
            cursor: pointer;
            transition: background 0.2s;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .location-btn:hover {
            background: var(--primary-dark);
        }
        
        .stats-bar {
            display: flex;
            justify-content: space-between;
            background: white;
            border-radius: 10px;
            padding: 1rem;
            margin-bottom: 1.5rem;
            box-shadow: var(--card-shadow);
        }
        
        .stat-item {
            text-align: center;
            flex: 1;
        }
        
        .stat-value {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--primary);
        }
        
        .stat-label {
            font-size: 0.8rem;
            color: var(--gray);
            margin-top: 0.25rem;
        }
        
        @media (max-width: 768px) {
            .stats-bar {
                flex-direction: column;
                gap: 1rem;
            }
            
            .stat-item {
                display: flex;
                justify-content: space-between;
                align-items: center;
            }
        }
        
        .custom-popup .leaflet-popup-content-wrapper {
            border-radius: 10px;
            box-shadow: var(--card-shadow);
        }
        
        .custom-popup .leaflet-popup-content {
            margin: 15px 19px;
            font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;
        }
        
        .popup-title {
            font-weight: 700;
            color: var(--primary);
            margin-bottom: 0.5rem;
        }
        
        .popup-description {
            font-size: 0.9rem;
            color: var(--gray);
            margin-bottom: 0.5rem;
        }
        
        .popup-date {
            font-size: 0.8rem;
            color: var(--gray);
            display: flex;
            align-items: center;
            gap: 0.4rem;
        }
    </style>
{% endblock %}

{% block body %}
{{ include('navbar.html.twig') }}

<br>
    <div class="container mx-auto px-4">
        <div class="flex items-center justify-center gap-3 mb-2">
            <i class="fas fa-map-marked-alt text-3xl"></i>
            <h1 class="text-3xl font-bold">Mapa de Eventos en Pasto, Nariño</h1>
        </div>
        <p class="text-center opacity-90 max-w-2xl mx-auto">Descubre los eventos más destacados en la ciudad de Pasto. Haz clic en cualquier marcador o tarjeta para ver más detalles.</p>
    </div>
<br>
<div class="container mx-auto px-4 mb-8">


    <div 
        x-data="mapaEventos($el)"
        x-init="init()"
        data-eventos='{{ eventos|json_encode|e('html_attr') }}'
        class="flex flex-col md:flex-row gap-6"
    >
        <!-- 📍 Lista lateral -->
        <div class="md:w-1/3 w-full sidebar">
            <div class="sidebar-header">
                <i class="fas fa-calendar-alt"></i>
                <h2 class="text-lg font-semibold">Eventos en Pasto</h2>
            </div>
            
            <div class="search-container">
                <input 
                    type="text" 
                    class="search-input" 
                    placeholder="Buscar eventos..." 
                    x-model="searchTerm"
                    @input="filtrarEventos"
                >
            </div>
            
            <div class="events-container">
                <template x-if="eventosFiltrados.length === 0">
                    <div class="no-events">
                        <i class="fas fa-calendar-times"></i>
                        <p>No se encontraron eventos</p>
                    </div>
                </template>
                
                <template x-for="(evento, index) in eventosFiltrados" :key="index">
                    <div 
                        class="event-card"
                        @click="centrarEnEvento(evento)"
                    >
                        <div class="event-title">
                            <i class="fas fa-map-pin text-red-500"></i>
                            <span x-text="evento.titulo || 'Evento sin título'"></span>
                        </div>
                        <div class="event-description" x-text="evento.descripcion || 'Sin descripción disponible'"></div>
                        <div class="event-date">
                            <i class="far fa-clock"></i>
                            <span x-text="evento.fecha || 'Fecha no disponible'"></span>
                        </div>
                    </div>
                </template>
            </div>
        </div>

        <!-- 🗺️ Mapa -->
        <div id="map" class="md:w-2/3 w-full"></div>

        <!-- 💬 Modal de información -->
        <div 
            x-show="open"
            x-transition.opacity
            x-cloak
            class="modal-bg"
            @click.self="close()"
        >
            <div class="modal-content">
                <button @click="close()" class="close-btn">
                    <i class="fas fa-times"></i>
                </button>
                <h2 class="modal-title" x-text="titulo"></h2>
                <p class="modal-description" x-text="descripcion"></p>
                
                <template x-if="imagen">
                    <img :src="imagen" alt="Imagen del evento" class="modal-image">
                </template>
                
                <div class="modal-footer">
                    <div class="modal-date">
                        <i class="far fa-calendar"></i>
                        <span x-text="fecha"></span>
                    </div>
                    <button class="location-btn" @click="centrarEnEvento(eventoActual)">
                        <i class="fas fa-location-arrow"></i>
                        Ver en mapa
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

{{ include('footer.html.twig') }}

<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<script>
function mapaEventos(el) {
    return {
        map: null,
        eventos: [],
        eventosFiltrados: [],
        markers: {},
        open: false,
        titulo: '',
        descripcion: '',
        fecha: '',
        imagen: '',
        searchTerm: '',
        eventoActual: null,

        get eventosConUbicacion() {
            return this.eventos.filter(evento => evento.latitud && evento.longitud);
        },
        
        get eventosRecientes() {
            // Filtrar eventos de los últimos 30 días (simulado)
            return this.eventos.filter(() => Math.random() > 0.5);
        },

        init() {
            try {
                this.eventos = JSON.parse(el.dataset.eventos || '[]');
                this.eventosFiltrados = [...this.eventos];
            } catch (e) {
                console.error("Error parseando eventos:", e);
                this.eventos = [];
                this.eventosFiltrados = [];
            }

            if (L.DomUtil.get('map') !== null) {
                L.DomUtil.get('map')._leaflet_id = null;
            }

            // Inicializar mapa centrado en Pasto
            this.map = L.map('map').setView([-1.2136, -78.5051], 13);
            
            // Usar un tile layer más moderno
            L.tileLayer('https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors &copy; <a href="https://carto.com/attributions">CARTO</a>',
                subdomains: 'abcd',
                maxZoom: 20
            }).addTo(this.map);

            const bounds = [];

            this.eventos.forEach(evento => {
                if (evento.latitud && evento.longitud) {
                    // Crear un icono personalizado
                    const customIcon = L.divIcon({
                        html: `<div class="bg-${this.getRandomColor()}-500 rounded-full p-2 shadow-lg flex items-center justify-center">
                                 <i class="fas fa-map-marker-alt text-white"></i>
                               </div>`,
                        className: 'custom-marker',
                        iconSize: [30, 30],
                        iconAnchor: [15, 30]
                    });
                    
                    const marker = L.marker([evento.latitud, evento.longitud], {icon: customIcon}).addTo(this.map);
                    
                    // Crear un popup personalizado
                    const popupContent = `
                        <div class="custom-popup">
                            <div class="popup-title">${evento.titulo || 'Evento sin título'}</div>
                            <div class="popup-description">${evento.descripcion ? (evento.descripcion.substring(0, 100) + '...') : 'Sin descripción'}</div>
                            <div class="popup-date">
                                <i class="far fa-clock"></i>
                                ${evento.fecha || 'Fecha no disponible'}
                            </div>
                        </div>
                    `;
                    
                    marker.bindPopup(popupContent);
                    marker.on('click', () => this.show(evento));
                    this.markers[evento.titulo] = marker;
                    bounds.push([evento.latitud, evento.longitud]);
                }
            });

            if (bounds.length) {
                this.map.fitBounds(bounds, { padding: [50, 50] });
            } else {
                this.map.setView([-1.2136, -78.5051], 13);
            }
        },
        
        getRandomColor() {
            const colors = ['red', 'blue', 'green', 'purple', 'indigo', 'pink'];
            return colors[Math.floor(Math.random() * colors.length)];
        },

        centrarEnEvento(evento) {
            if (evento.latitud && evento.longitud) {
                this.map.setView([evento.latitud, evento.longitud], 15);
                const marker = this.markers[evento.titulo];
                if (marker) {
                    marker.openPopup();
                }
                this.show(evento);
            }
        },
        
        filtrarEventos() {
            if (!this.searchTerm) {
                this.eventosFiltrados = [...this.eventos];
                return;
            }
            
            const term = this.searchTerm.toLowerCase();
            this.eventosFiltrados = this.eventos.filter(evento => 
                (evento.titulo && evento.titulo.toLowerCase().includes(term)) ||
                (evento.descripcion && evento.descripcion.toLowerCase().includes(term))
            );
        },

        show(evento) {
            this.titulo = evento.titulo || 'Sin título';
            this.descripcion = evento.descripcion || 'Sin descripción';
            this.fecha = evento.fecha || 'Fecha no disponible';
            this.imagen = evento.imagen ? '{{ asset('uploads/events/') }}/' + evento.imagen : '';
            this.eventoActual = evento;
            this.open = true;
        },

        close() {
            this.open = false;
            this.eventoActual = null;
        }
    }
}
</script>
{% endblock %}